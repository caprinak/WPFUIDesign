<Application x:Class="MVVMFormBasic.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:MVVMFormBasic" xmlns:sys="clr-namespace:System;assembly=mscorlib"
             StartupUri="MainWindow.xaml"
             DispatcherUnhandledException="Application_DispatcherUnhandledException"
             >
    <!--StartupUri="MainWindow.xaml"-->

   
    <Application.Resources>
        
         <sys:String x:Key="AppComboBoxTitle">App Items:</sys:String>
        <Style TargetType="Image">
            <Setter Property="Width" Value="20"></Setter>
        </Style>
 
        <Style TargetType="Button">
            <Setter Property="Background" Value="BurlyWood"></Setter>
            <Setter Property="Foreground" Value="White"></Setter>
            <Setter Property="Width" Value="40"></Setter>
            <Setter Property="Height" Value="15"></Setter>
        </Style>
        <Style TargetType="Button" x:Key="btnStyleOrange">
            <Setter Property="Background" Value="Orange"></Setter>
      
        </Style>
        <!--<Style TargetType="FlowDocument">
            <Setter Property="IsOptimalParagraphEnabled" Value="True" />
            <Setter Property="IsHyphenationEnabled" Value="True" />
        </Style>-->
    </Application.Resources>
</Application>
<!--They work much like for a Window, where the two files are partial classes, working together to allow
    you to work in both markup (XAML) and Code-behind.

App.xaml.cs extends the Application class, which is a central class in a WPF Windows application.
.NET will go to this class for starting instructions and then start the desired Window or Page from there.
    This is also the place to subscribe to important application events, like application start,
    unhandled exceptions and so on. --> 