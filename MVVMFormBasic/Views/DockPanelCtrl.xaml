<UserControl x:Class="MVVMFormBasic.Views.DockPanelCtrl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:MVVMFormBasic.Views"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <Grid>
        <!--, we don't assign a dock position for the last child, because it automatically centers the control, 
        allowing it to fill the remaining space.
        The last thing that you will likely notice, is how the space is divided. For instance, the Top button
        doesn't get all of the top space, because the Left button takes a part of it. The DockPanel decides 
        which control to favor by looking at their position in the markup. In this case, the Left button gets
        precedence because it's placed first in the markup.-->
        <!--<DockPanel>
            <Button DockPanel.Dock="Left">Left</Button>
            <Button DockPanel.Dock="Top">Top</Button>
            <Button DockPanel.Dock="Right">Right</Button>
            <Button DockPanel.Dock="Bottom">Bottom</Button>
            <Button>Center</Button>
        </DockPanel>-->

        <!--The top and bottom controls now take precedence over the left and right controls, and they're 
        all taking up 50 pixels in either height or width. If you make the window bigger or smaller, you
        will also see that this static width/height remains the same no matter what-->
        <!--<DockPanel>
            <Button DockPanel.Dock="Top" Height="50">Top</Button>
            <Button DockPanel.Dock="Bottom" Height="50">Bottom</Button>
            <Button DockPanel.Dock="Left" Width="50">Left</Button>
            <Button DockPanel.Dock="Right" Width="50">Right</Button>
            <Button>Center</Button>
        </DockPanel>-->

        <!--the default behavior is that the last child of the DockPanel takes up the rest of the space, 
        but this can be disabled using the LastChildFill.-->
        <DockPanel LastChildFill="False">
            <Button DockPanel.Dock="Top" Height="50">Top</Button>
            <Button DockPanel.Dock="Bottom" Height="50">Bottom</Button>
            <Button DockPanel.Dock="Left" Width="50">Left</Button>
            <Button DockPanel.Dock="Left" Width="50">Left</Button>
            <Button DockPanel.Dock="Right" Width="50">Right</Button>
            <Button DockPanel.Dock="Right" Width="50">Right</Button>
        </DockPanel>
    </Grid>
</UserControl>
