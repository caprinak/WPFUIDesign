<UserControl x:Class="MVVMFormBasic.Views.ButtonControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:MVVMFormBasic.Views"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <Style TargetType="{x:Type Button}">
            <Setter Property="Padding" Value="5,5"/>
        </Style>
    </UserControl.Resources>
    <Grid>
        <!--The WPF Button only supports one direct child control, but you can just make that a Panel, which will then host as many 
        controls as you need to. You can use this to create buttons with various types of formatting:-->
        <StackPanel Width="300" >

        <Button>
            <StackPanel Orientation="Horizontal" Background="Crimson">
                <TextBlock>Formatted</TextBlock>
                <TextBlock Foreground="Blue" FontWeight="Bold" Margin="2,0">Button</TextBlock>
                <TextBlock Foreground="CadetBlue" FontStyle="Italic">[Various]</TextBlock>
            </StackPanel>
        </Button>
            <!--This will apply a padding of 5 pixels on the sides, and 2 pixels in the top and bottom.-->
            <Button Padding="5,10">
            <StackPanel Orientation="Horizontal">
                    <Image Width="30" Source=".\funny.png" />
                    
                    <TextBlock Margin="5,0">Help</TextBlock>
            </StackPanel>
        </Button>
        </StackPanel>
    </Grid>
</UserControl>
