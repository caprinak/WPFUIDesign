<UserControl x:Class="MVVMFormBasic.Views.CheckBoxCtrl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:MVVMFormBasic.Views"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition></ColumnDefinition>
            <ColumnDefinition></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <!--The CheckBox control inherits from the ContentControl class, which means that it can take
        custom content and display next to it. If you just specify a piece of text. You can use any type
        of control inside of it,-->
        <StackPanel Grid.Column="1" Margin="10">
            <Label FontWeight="Bold">Application Options</Label>
            <CheckBox>
                <TextBlock>
		Enable feature <Run Foreground="Green" FontWeight="Bold">ABC</Run>
                </TextBlock>
            </CheckBox>
            <CheckBox IsChecked="True">
                <WrapPanel>
                    <TextBlock>
			Enable feature <Run FontWeight="Bold">XYZ</Run>
                    </TextBlock>
                    <Image Source="/MVVMFormBasic;component/Images/question-mark-10911.png" Width="16" Height="16" Margin="5,0" />
                </WrapPanel>
            </CheckBox>
            <CheckBox>
                <TextBlock>
		Enable feature <Run Foreground="Blue" TextDecorations="Underline" FontWeight="Bold">WWW</Run>
                </TextBlock>
            </CheckBox>
        </StackPanel>

        <StackPanel Margin="10">
            <Label FontWeight="Bold">Application Options</Label>
            <StackPanel Margin="10,5">
                <!--As mentioned, the CheckBox usually corresponds to a boolean value, which means that it only has two states:
                true or false (on or off). However, since a boolean data type might be nullable, effectively allowing for a third
                option (true, false or null), the CheckBox control can also support this case. By setting the IsThreeState property
                to true, the CheckBox will get a third state called "the indeterminate state".

            A common usage for this is to have a "Enable all" CheckBox, which can control a set of child checkboxes, as well as show 
                their  collective state. Our example shows how you may create a list of features that can be toggled on and off, with a 
               common "Enable all" CheckBox in the top:
            This example works from two different angles: If you check or uncheck the "Enable all" CheckBox, then all of the 
                child check boxes, each representing an application feature in our example, is either checked or unchecked.
                It also works the other way around though, where checking or unchecking a child CheckBox affects the "Enable all" 
                CheckBox state: If they are all checked or unchecked, then the "Enable all" CheckBox gets the same state - otherwise the value will be left with a null, which forces the CheckBox into the indeterminate state.-->
                <CheckBox IsThreeState="True" Name="cbAllFeatures" Checked="cbAllFeatures_CheckedChanged" Unchecked="cbAllFeatures_CheckedChanged">Enable all</CheckBox>
                <StackPanel Margin="20,5">
                    <CheckBox Name="cbFeatureAbc" Checked="cbFeature_CheckedChanged" Unchecked="cbFeature_CheckedChanged">Enable feature ABC</CheckBox>
                    <CheckBox Name="cbFeatureXyz" IsChecked="True" Checked="cbFeature_CheckedChanged" Unchecked="cbFeature_CheckedChanged">Enable feature XYZ</CheckBox>
                    <CheckBox Name="cbFeatureWww" Checked="cbFeature_CheckedChanged" Unchecked="cbFeature_CheckedChanged">Enable feature WWW</CheckBox>
                </StackPanel>
            </StackPanel>
        </StackPanel>

    </Grid>
</UserControl>
