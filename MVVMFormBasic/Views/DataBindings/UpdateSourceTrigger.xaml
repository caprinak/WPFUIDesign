<UserControl x:Class="MVVMFormBasic.Views.DataBindings.UpdateSourceTrigger"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:MVVMFormBasic.Views.DataBindings"
             mc:Ignorable="d"  
             d:DesignHeight="450" d:DesignWidth="800"
              >
    <Grid>
        <!--
        The first one is set to Explicit, which basically means that the source won't be updated unless you manually do it.
        For that reason, I have added a button next to the TextBox, which will update the source value on demand. In the 
        Code-behind, you will find the Click handler, where we use a couple of lines of code to get the binding from the
        destination control and then call the UpdateSource() method on it.

The second TextBox uses the LostFocus value, which is actually the default for a Text binding. It means that the source 
        value will be updated each time the destination control loses focus.

The third and last TextBox uses the PropertyChanged value, which means that the source value will be updated each time 
        the bound property changes, which it does in this case as soon as the text changes.
        
        The UpdateSourceTrigger property of a binding controls how and when a changed value is sent back to the
        source. However, since WPF is pretty good at controlling this for you, the default value should suffice for
        most cases, where you will get the best mix of a constantly updated UI and good performance.-->
        <StackPanel Margin="15">
            <WrapPanel>
                <TextBlock Text="Window title:  " />
                <TextBox Name="txtWindowTitle" Text="{Binding Title, UpdateSourceTrigger=Explicit}" Width="150" />
                <Button Name="btnUpdateSource" Click="btnUpdateSource_Click" Margin="5,0" Padding="5,0">*</Button>
            </WrapPanel>
            <WrapPanel Margin="0,10,0,0">
                <TextBlock Text="Window dimensions: " />
                <TextBox Text="{Binding Width, UpdateSourceTrigger=LostFocus}" Width="50" />
                <TextBlock Text=" x " />
                <TextBox Text="{Binding Height, UpdateSourceTrigger=PropertyChanged}" Width="50" />
            </WrapPanel>
        </StackPanel>
    </Grid>
</UserControl>
