<UserControl x:Class="MVVMFormBasic.Views.DataBindings.ValueConverter"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:MVVMFormBasic.Views.DataBindings"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <!--declaring an instance of our converter as a resource for the window.-->
    <UserControl.Resources>
        <local:YesNoToBooleanConverter x:Key="YesNoToBooleanConverter" />
    </UserControl.Resources>
    <StackPanel Margin="10">
        <TextBox Name="txtValue" />
        <WrapPanel Margin="0,10">
            <TextBlock Text="Current value is: " />
            <!--Value converters are very frequently used with data bindings. Here are some basic 
            examples:

            You have a numeric value but you want to show zero values in one way and positive numbers in 
            another way
            You want to check a CheckBox based on a value, but the value is a string like "yes" or "no"
            instead of a Boolean value
            You have a file size in bytes but you wish to show it as bytes, kilobytes, megabytes or gigabytes
            based on how big it is
            For instance, you may want to check a checkbox based on a Boolean value, but you want it 
            reversed, so that the CheckBox is checked if the value is false and not checked if the
            value is true. You can even use a converter to generate an image for an ImageSource, 
            based on the value, like a green sign for true or a red sign for false - the possibilities
            are pretty much endless!
            -->

            <!--bind the value of the TextBox to the TextBlock and the CheckBox control and using the
            Converter property and our own converter reference,we juggle the values back and forth 
            between a string and a Boolean value, depending on what's needed.-->
            <TextBlock Text="{Binding ElementName=txtValue, Path=Text, Converter={StaticResource YesNoToBooleanConverter}}"></TextBlock>
        </WrapPanel>
        <CheckBox IsChecked="{Binding ElementName=txtValue, Path=Text, Converter={StaticResource YesNoToBooleanConverter}}" Content="Yes" />
    </StackPanel>
</UserControl>
