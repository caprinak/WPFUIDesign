<UserControl x:Class="MVVMFormBasic.TreeView.TreeViewSelectionExpansionSample"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:MVVMFormBasic.TreeView"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <DockPanel Margin="10">
        <WrapPanel Margin="0,10,0,0" DockPanel.Dock="Bottom" HorizontalAlignment="Center">
            <Button Name="btnSelectNext" Click="btnSelectNext_Click" Width="120">Select next</Button>
            <Button Name="btnToggleExpansion" Click="btnToggleExpansion_Click" Width="120" Margin="10,0,0,0">Toggle expansion</Button>
        </WrapPanel>
        <TreeView Name="trvPersons">
            <TreeView.ItemTemplate>
                <HierarchicalDataTemplate ItemsSource="{Binding Children}">
                    <StackPanel Orientation="Horizontal">
                        <Image Width="20" Source="/Images/USER.png" Margin="0,0,5,0" />
                        <TextBlock Text="{Binding Name}" Margin="0,0,4,0" />
                        <TextBlock Text="{Binding Age}" Margin="0,0,4,0" />
                    </StackPanel>
                </HierarchicalDataTemplate>
            </TreeView.ItemTemplate> 
    <!--The ItemTemplate is for styling how the content of your data item appears. You use it to bind 
            data fields, format display strings, and so forth. It determines how the data is presented.

    The ItemContainerStyle is for styling the container of the data item. In a list box, this would 
            be a ListBoxItem. Styling here affects things like selection behavior or background color.
            It determines style and UX of the display.-->
            <TreeView.ItemContainerStyle>
                <Style TargetType="TreeViewItem">
             <!--tying together the properties on our own custom class with 
                the IsSelected and IsExpanded properties on the TreeViewItems,-->
                    <Setter Property="IsSelected" Value="{Binding IsSelected}" />
                    <Setter Property="IsExpanded" Value="{Binding IsExpanded}" />
                </Style>
            </TreeView.ItemContainerStyle>
        </TreeView>
    </DockPanel>
</UserControl>
